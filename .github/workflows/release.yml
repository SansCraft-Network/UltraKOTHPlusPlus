name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  statuses: write
  deployments: write
  actions: write
  checks: read

jobs:
  release:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          
      - name: Build with Maven
        run: mvn -B clean package
        
      - name: Get version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
        
      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: UltraKOTHPlusPlus v${{ steps.get_version.outputs.VERSION }}
          body: |
            ## UltraKOTHPlusPlus v${{ steps.get_version.outputs.VERSION }}
            
            ### Features
            - Advanced KOTH plugin with WorldGuard integration
            - PlaceholderAPI support
            - Boss bar support
            - Player statistics tracking
            
            ### Installation
            1. Download the JAR file below
            2. Place it in your server's `plugins` folder
            3. Restart your server
            4. Configure the plugin in `plugins/UltraKOTHPlusPlus/config.yml`
            
            ### Requirements
            - Spigot/Paper 1.19.4+
            - Java 8+
            - WorldGuard (optional)
            - PlaceholderAPI (optional)
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Find JAR
        id: find_jar
        run: |
          JAR=$(ls target/UltraKOTHPlusPlus*.jar)
          echo "artifact=$JAR" >> $GITHUB_OUTPUT
          echo "artifact_name=$(basename $JAR)" >> $GITHUB_OUTPUT
          
      - name: Upload JAR to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.find_jar.outputs.artifact }}
          asset_name: ${{ steps.find_jar.outputs.artifact_name }}
          asset_content_type: application/java-archive
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
